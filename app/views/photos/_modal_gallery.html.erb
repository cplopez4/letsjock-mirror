<style>
    .tags {
        border-radius: 0 4px 4px 0;
        -moz-border-radius: 0 4px 4px 0;
        -webkit-border-radius: 0 4px 4px 0;
        border-right: 1px solid #ccc;
        font-size: 12px !important;
        height: 10px !important;
        width: 100px !important;
        margin-right: 3px !important;
    }

        /* Autocomplete
        ----------------------------------*/
    .ui-autocomplete { background: white; position: absolute; cursor: default; border: #ccc 1px solid; color: #444; font-size: 12px; }
    .ui-autocomplete-loading { background: white right center no-repeat; }

        /* workarounds */
    * html .ui-autocomplete { width:1px; } /* without this, the menu expands to 100% in IE6 */

        /* Menu
        ----------------------------------*/
    .ui-helper-hidden-accessible { display:none; }
    .ui-menu {
        list-style:none;
        padding: 2px;
        margin: 0;
        display:block;
    }
    .ui-menu .ui-menu {
        margin-top: -3px;
    }
    .ui-menu .ui-menu-item {
        margin:0;
        padding: 0;
        width: 100%;
    }
    .ui-menu .ui-menu-item:hover {
        /*Falta que cambie a este color cuando me muevo con las flechas (hover con keydown)*/
        background-color: #ccc;
    }
    .ui-menu .ui-menu-item a {
        text-decoration:none;
        display:block;
        padding:.2em .4em;
        line-height:1.5;
        zoom:1;
    }
    .ui-menu .ui-menu-item a.ui-state-hover,
    .ui-menu .ui-menu-item a.ui-state-active {
        margin: -1px;
        color: #0f0;
    }
</style>

<!-- modal-gallery is the modal dialog used for the image gallery -->
<div id="modal-gallery" class="modal modal-gallery hide fade" tabindex="-1">
  <div class="modal-body">
    <div class="modal-image"></div>  
    <ul style="margin-bottom: 3px; margin-top: 5px;" class="nav nav-pills">
      
    <% if signed_in? %>
      <div class="pull-right photo-like">
        <small>
          <%= link_to "#", :remote => true do %>
            <button class="btn btn-mini btn-like"><i class="icon-trophy icon-gray"></i> <span>Like</span></button>
          <% end %>
          &nbsp;•&nbsp;
          <a><i class="icon-trophy icon-large"></i> <span class="likes-count" data-count="0">0</span> likes</a>
        </small>
      </div>
    <% end %>
    
    </ul>
    
    <ul style="margin-bottom: 5px;" id="descriptionFrame" class="breadcrumb">
      <li id="description" class="active"></li>
      <li id="editDescriptionForm"></li>
      <i class="icon-pencil pull-right editDescription" style="color: graytext; cursor: pointer;"></i>
    </ul>
    
    <%= form_tag({:controller => 'users', :action => 'add_tag'}, :id => "tagsForm") do  %>
      <fieldset>
        <div id="appendtags" style="margin-top: 5px;"></div>
        
        <% if @user && @user.id == current_user.id %>
          <span style="cursor: pointer;" id="clickTags" class="badge badge-warning">edit tags</span>
        <% end %>
        
        <span style="cursor: pointer;" id="submitBadge" class="badge badge-success"><i class="icon-ok icon-white"></i></span>
        <div style="margin-top: 5px;" id="inputTags">
          <input type="text" id="tags_user" class="tags pull-left" placeholder="Users">
          <input type="text" id="tags_event" class="tags pull-left" placeholder="Events">
          <input type="hidden" name="tags[photo_id]" value="">
          <input type="hidden" name="tags[user_id]" value="<%= current_user.id if signed_in? %>">
          <input type="hidden" name="tags[actual_user_id]" value="<%= params[:id] if signed_in? %>">
        </div>
      </fieldset>
    <% end %>

  </div>
</div>

<script>
    $(document).ready(function() {
        $( "#tags_user" )
                .bind( "keydown", function( event ) {
                    if ( event.keyCode === $.ui.keyCode.TAB &&
                            $( this ).data( "ui-autocomplete" ).menu.active ) {
                        event.preventDefault();
                    }
                })
                .autocomplete({
                    source: tagsUserArray,
                    messages: {
                        noResults: '',
                        results: function() {}
                    } ,
                    select: function( event, ui ) {
                        $("#appendtags").after('<span style="margin-right: 2px; display: inline;" class="label label-info"><a style="color: #ffffff; text-decoration: none;" href="/profile/' + ui.item.value + '">' + ui.item.label + ' </a><input type="hidden" name="tags[users][]" value="' + ui.item.value + '"><button style="float: none;" type="button" class="close" aria-hidden="true">×</button></span>');
                        $("#tags_user").attr("value", "");
                        return false;
                    } ,
                    focus: function( event, ui ) {
                        return false;
                    }
                });

        $( "#tags_event" )
                .bind( "keydown", function( event ) {
                    if ( event.keyCode === $.ui.keyCode.TAB &&
                            $( this ).data( "ui-autocomplete" ).menu.active ) {
                        event.preventDefault();
                    }
                })
                .autocomplete({
                    source: tagsEventArray,
                    messages: {
                        noResults: '',
                        results: function() {}
                    } ,
                    select: function( event, ui ) {
                        $("#appendtags").after('<span style="margin-right: 2px; display: inline;" class="label label-success"><a style="color: #ffffff; text-decoration: none;" href="/events/' + ui.item.value + '">' + ui.item.label + ' </a><input type="hidden" name="tags[events][]" value="' + ui.item.value + '"><button style="float: none;" type="button" class="close" aria-hidden="true">×</button></span>');
                        $("#tags_event").attr("value", "");
                        return false;
                    } ,
                    focus: function( event, ui ) {
                        return false;
                    }
                });

        function fullname(objeto){
            if(objeto.isSponsor == true)
                return objeto.name;
            else
                return objeto.name + " " + objeto.lastname;
        }

        $('#submitBadge').click(function(){
            $("#tagsForm").submit();
        });

        $("#modal-gallery").delegate(".close", "click", function () {
            $(this).closest('span.label').remove();
            $("#submitBadge").show("normal");
        });

        $("#modal-gallery").delegate("#submitPhotoComment", "click", function () {
            $('.formEditPhoto').submit();
        });

        $('.editDescription').click(function(){
            $('#description').toggle();
            $('#editDescriptionForm').toggle();
        });

        $('#clickTags').click(function(){
            $("#inputTags").show("normal");
            $("#submitBadge").show("normal");
        });

        $('#modal-gallery').on('load', function () {
            var modalData = $(this).data('modal');
            var photo_id = $(modalData.$links[modalData.options.index]).attr("data-id");

            var photo = $.grep(photos, function(element, index){
                return element.id == photo_id;
            })[0];
            
            $(this).find("#photo-owner").remove();
            $(this).find(".nav-pills").append('<li id="photo-owner"><a href="/profile/' + photo.user_id + '" style="color: #808080;"><b>' + photo.owner_name + '&rsquo;s photo</b></a></li>');

            $(this).find("#description").html("Write a description");
            $(this).find("form.formEditPhoto").remove();
            $("#descriptionFrame").hide();
            $(".editDescription").hide();
            $("#editDescriptionForm").append('<form action="/photos/' + photo.id + '" id="edit_photo_' + photo.id + '" method="post" class="formEditPhoto"><input type="hidden" name="photo[photo_id]" value="' + photo.id + '"><textarea class="span5" id="photo_comment" name="photo[comment]" rows="3" placeholder="Write a description"></textarea><span style="cursor: pointer;" id="submitPhotoComment" class="badge badge-success"><i class="icon-ok icon-white"></i></span></form>');
            
            if(photo.comment && photo.comment.length > 0){
                $(this).find("#photo_comment").val(photo.comment);
                $(this).find("#descriptionFrame").show();
                $(this).find("#description").html(photo.comment);
            }
            
            <% if @user && signed_in? && @user.id == current_user.id  %>
            if(photo.user_id == <%= current_user.id %>){
                $(this).find("#descriptionFrame").show();
                $(".editDescription").show();
            }
            <% end %>

            $(this).find("input[name='tags[photo_id]']").val(photo.id);
            $(this).find("span.label").remove();

            if(photo.tags && photo.tags.length > 0){
                for(i=0;i<photo.tags.length;i++){
                    if(photo.tags[i].lastname)
                        $(this).find("#appendtags").after('<span style="margin-right: 2px; display: inline;" class="label label-info"><a style="color: #ffffff; text-decoration: none;" href="/profile/' + photo.tags[i].id + '">' + fullname(photo.tags[i]) + ' </a><input type="hidden" name="tags[users][]" value="' + photo.tags[i].id + '"><button style="float: none;" type="button" class="close" aria-hidden="true">×</button></span>');
                    else
                        $(this).find("#appendtags").after('<span style="margin-right: 2px; display: inline;" class="label label-success"><a style="color: #ffffff; text-decoration: none;" href="/events/' + photo.tags[i].id + '">' + photo.tags[i].name + ' </a><input type="hidden" name="tags[events][]" value="' + photo.tags[i].id + '"><button style="float: none;" type="button" class="close" aria-hidden="true">×</button></span>');
                }
            }

            $(".close").hide();
            $("#inputTags").hide();
            $("#submitBadge").hide();
            $("#editDescriptionForm").hide();

            <% if signed_in? %>
            if(photo.user_id == <%= current_user.id %>)
                $(".close").show();
            else {
                for(i=0;i<photo.tags.length;i++){
                    if(photo.tags[i].lastname && photo.tags[i].id == <%= current_user.id %>){
                        var target = $('#modal-gallery').find("input[name='tags[users][]']");
                        for(j=0;j<target.length;j++){
                            if($(target[j]).val() == photo.tags[i].id){
                                $(target[j]).siblings("button.close").show();
                            }
                        }
                    }
                }
            }
            <% end %>
            
            // LIKES
            $(".photo-like .likes-count").attr("data-count", photo.likes).text(photo.likes);
            $(".photo-like .btn-like")
              .attr("disabled", "disabled")
              .removeClass("liked")
              .find("span").text("Like");
            
          <% if signed_in? %>
            $.post("<%= is_liked_path(current_user) %>", { object_id: photo.id, object_type: "Photo" }, function(data){
              if(data){
                $(".photo-like .btn-like")
                  .removeAttr("disabled")
                  .attr("data-remote", "true")
                  .parent()
                    .attr("href", "/profile/<%= current_user.id %>/like?object_id=" + photo.id + "&object_type=Photo");
                
                if(data.liked == true){
                  $(".photo-like .btn-like")
                    .addClass("liked")
                    .find("span").text("Liked");
                }
              }
            }, "json");
          <% end %>
        });

        <% if params[:callback_id] && params[:callback_id] != "" %>
            $(document).find("a[data-gallery='gallery'][data-id='<%= params[:callback_id] %>']").click();
        <% end %>
    });

    var photos = <%= @photos.any? ? @photos.to_json( :methods => [ :tags, :likes ] ).html_safe : "{}" %>;
    var tagsUserArray = <%= ( @user && @user.followers.any? ) ? @user.followers.select("users.id, users.name, users.lastname, users.isSponsor").map{|p| {:label=>p.full_name,:value=>p.id}}.to_json.html_safe : "{}" %>;
    var tagsEventArray = <%= ( @myevents && @myevents.any? ) ? @myevents.map{|event| {:label=>event.name,:value=>event.id}}.to_json.html_safe : "{}" %>;
</script>